name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3-beta, etc.
  workflow_dispatch:  # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Run tests
      run: npm run validate
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Secret Network MCP Server
          org.opencontainers.image.description=Model Context Protocol server for Secret Network blockchain interaction
          org.opencontainers.image.vendor=Secret Network MCP Contributors
          
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Generate build summary
      run: |
        echo "## 🚀 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Tag:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Digest:** \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Deployment Commands" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`yaml" >> $GITHUB_STEP_SUMMARY
        echo "# For TEE VM docker-compose.yml" >> $GITHUB_STEP_SUMMARY
        echo "image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}@${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔐 SHA256 Verification" >> $GITHUB_STEP_SUMMARY
        echo "For maximum security, use the digest above in your docker-compose.yml" >> $GITHUB_STEP_SUMMARY
        
    - name: Create release artifact
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        mkdir -p release-artifacts
        
        # Create deployment docker-compose with exact SHA256
        cat > release-artifacts/docker-compose.yml << EOF
        version: '3.8'
        
        services:
          secret-network-mcp:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}@${{ steps.build.outputs.digest }}
            container_name: secret-network-mcp
            restart: unless-stopped
            environment:
              - NODE_ENV=production
              - LOG_LEVEL=info
              - NETWORK=mainnet
              - SECRET_CHAIN_ID=secret-4
              - SECRET_CHAIN_URL=https://lcd.secret.express
              - MCP_TRANSPORT=stdio
              - SKIP_NETWORK_CHECK=false
              - ALLOW_OFFLINE_MODE=false
            stdin_open: true
            tty: true
            volumes:
              - mcp_logs:/app/logs
            healthcheck:
              test: ["CMD", "node", "-e", "console.log('MCP Health OK'); process.exit(0)"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 15s
            networks:
              - mcp_network
            deploy:
              resources:
                limits:
                  memory: 512M
                  cpus: '0.5'
                reservations:
                  memory: 256M
                  cpus: '0.25'
        
        networks:
          mcp_network:
            driver: bridge
            
        volumes:
          mcp_logs:
            driver: local
        EOF
        
        # Create build info
        cat > release-artifacts/build-info.json << EOF
        {
          "version": "${{ github.ref_name }}",
          "image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}",
          "tag": "${{ github.ref_name }}",
          "digest": "${{ steps.build.outputs.digest }}",
          "platforms": ["linux/amd64", "linux/arm64"],
          "built_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "git_commit": "${{ github.sha }}",
          "git_ref": "${{ github.ref }}"
        }
        EOF
        
    - name: Upload release artifacts
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v4
      with:
        name: secret-network-mcp-${{ github.ref_name }}
        path: release-artifacts/
        retention-days: 90
